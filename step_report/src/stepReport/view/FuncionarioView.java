/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stepReport.view;

import Exceptions.notFoundException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import stepReport.control.FuncionarioControl;

/**
 *
 * @author Kildare
 */
public class FuncionarioView extends javax.swing.JPanel {

    /**
     * Creates new form FuncionarioView
     */
    
    private FuncionarioControl Control;

    private static int state;
    
    private static final int CADASTRO = 1;        
    private static final int BUSCA = 2;
    private static final int EDIT = 3;
    private static final int REMOVE = 4; 
            
    public FuncionarioView(FuncionarioControl Control) {
        initComponents();
        this.Control = Control;
        FuncionarioView.state = FuncionarioView.BUSCA;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        nomeLabel = new javax.swing.JLabel();
        numeroLabel = new javax.swing.JLabel();
        nacionalidadeLabel = new javax.swing.JLabel();
        profissaoLabel = new javax.swing.JLabel();
        nomeTextField = new javax.swing.JTextField();
        profissaoTextField = new javax.swing.JTextField();
        nacionalidadeCombo = new javax.swing.JComboBox<>();
        confirmarButton = new javax.swing.JButton();
        numeroFormattedField = new javax.swing.JFormattedTextField();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLabel.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        titleLabel.setText("Cadastrar Funcionário");
        add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 13, -1, -1));

        nomeLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        nomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nomeLabel.setText("Nome do trabalhador:");
        add(nomeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 78, 219, -1));

        numeroLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        numeroLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numeroLabel.setText("Número do trabalhador:");
        add(numeroLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 128, -1, -1));

        nacionalidadeLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        nacionalidadeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nacionalidadeLabel.setText("Nacionalidade:");
        add(nacionalidadeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 175, 219, -1));

        profissaoLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        profissaoLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        profissaoLabel.setText("Profissão:");
        add(profissaoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 222, 219, -1));

        nomeTextField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(nomeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 78, 500, -1));

        profissaoTextField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(profissaoTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 219, 500, -1));

        nacionalidadeCombo.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        nacionalidadeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afeganistão", "ÁfricadoSul", "Albânia", "Alemanha", "Andorra", "Angola", "Anguilla", "AntilhasHolandesas", "Antárctida", "AntíguaeBarbuda", "Argentina", "Argélia", "Armênia", "Aruba", "ArábiaSaudita", "Austrália", "Áustria", "Azerbaijão", "Bahamas", "Bahrein", "Bangladesh", "Barbados", "Belize", "Benim", "Bermudas", "Bielorrússia", "Bolívia", "Botswana", "Brasil", "Brunei", "Bulgária", "BurkinaFaso", "Burundi", "Butão", "Bélgica", "BósniaeHerzegovina", "CaboVerde", "Camarões", "Camboja", "Canadá", "Catar", "Cazaquistão", "Chade", "Chile", "China", "Chipre", "Colômbia", "Comores", "CoreiadoNorte", "CoreiadoSul", "CostadoMarfim", "CostaRica", "Croácia", "Cuba", "Dinamarca", "Djibouti", "Dominica", "Egito", "ElSalvador", "EmiradosÁrabesUnidos", "Equador", "Eritreia", "Escócia", "Eslováquia", "Eslovênia", "Espanha", "EstadosFederadosdaMicronésia", "EstadosUnidos", "Estônia", "Etiópia", "Fiji", "Filipinas", "Finlândia", "França", "Gabão", "Gana", "Geórgia", "Gibraltar", "Granada", "Gronelândia", "Grécia", "Guadalupe", "Guam", "Guatemala", "Guernesei", "Guiana", "GuianaFrancesa", "Guiné", "GuinéEquatorial", "Guiné-Bissau", "Gâmbia", "Haiti", "Honduras", "HongKong", "Hungria", "IlhaBouvet", "IlhadeMan", "IlhadoNatal", "IlhaHeardeIlhasMcDonald", "IlhaNorfolk", "IlhasCayman", "IlhasCocos(Keeling)", "IlhasCook", "IlhasFeroé", "IlhasGeórgiadoSuleSandwichdoSul", "IlhasMalvinas", "IlhasMarshall", "IlhasMenoresDistantesdosEstadosUnidos", "IlhasSalomão", "IlhasVirgensAmericanas", "IlhasVirgensBritânicas", "IlhasÅland", "Indonésia", "Inglaterra", "Índia", "Iraque", "IrlandadoNorte", "Irlanda", "Irã", "Islândia", "Israel", "Itália", "Iêmen", "Jamaica", "Japão", "Jersey", "Jordânia", "Kiribati", "Kuwait", "Laos", "Lesoto", "Letônia", "Libéria", "Liechtenstein", "Lituânia", "Luxemburgo", "Líbano", "Líbia", "Macau", "Macedônia", "Madagáscar", "Malawi", "Maldivas", "Mali", "Malta", "Malásia", "MarianasSetentrionais", "Marrocos", "Martinica", "Mauritânia", "Maurícia", "Mayotte", "Moldávia", "Mongólia", "Montenegro", "Montserrat", "Moçambique", "Myanmar", "México", "Mônaco", "Namíbia", "Nauru", "Nepal", "Nicarágua", "Nigéria", "Niue", "Noruega", "NovaCaledônia", "NovaZelândia", "Níger", "Omã", "Palau", "Palestina", "Panamá", "Papua-NovaGuiné", "Paquistão", "Paraguai", "PaísdeGales", "PaísesBaixos", "Peru", "Pitcairn", "PolinésiaFrancesa", "Polônia", "PortoRico", "Portugal", "Quirguistão", "Quênia", "ReinoUnido", "RepúblicaCentro-Africana", "RepúblicaCheca", "RepúblicaDemocráticadoCongo", "RepúblicadoCongo", "RepúblicaDominicana", "Reunião", "Romênia", "Ruanda", "Rússia", "SaaraOcidental", "SaintMartin", "Saint-Barthélemy", "Saint-PierreeMiquelon", "SamoaAmericana", "Samoa", "SantaHelena,AscensãoeTristãodaCunha", "SantaLúcia", "Senegal", "SerraLeoa", "Seychelles", "Singapura", "Somália", "SriLanka", "Suazilândia", "Sudão", "Suriname", "Suécia", "Suíça", "SvalbardeJanMayen", "SãoCristóvãoeNevis", "SãoMarino", "SãoToméePríncipe", "SãoVicenteeGranadinas", "Sérvia", "Síria", "Tadjiquistão", "Tailândia", "Taiwan", "Tanzânia", "TerrasAustraiseAntárticasFrancesas", "TerritórioBritânicodoOceanoÍndico", "Timor-Leste", "Togo", "Tonga", "Toquelau", "TrinidadeTobago", "Tunísia", "TurcaseCaicos", "Turquemenistão", "Turquia", "Tuvalu", "Ucrânia", "Uganda", "Uruguai", "Uzbequistão", "Vanuatu", "Vaticano", "Venezuela", "Vietname", "WalliseFutuna", "Zimbabwe", "Zâmbia" }));
        add(nacionalidadeCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 172, 393, -1));

        confirmarButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        confirmarButton.setText("CONFIRMAR");
        confirmarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarButtonActionPerformed(evt);
            }
        });
        add(confirmarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, -1, 45));

        numeroFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        numeroFormattedField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(numeroFormattedField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 125, 500, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void confirmarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarButtonActionPerformed
        // TODO add your handling code here:
        if(FuncionarioView.state == FuncionarioView.EDIT){
            ArrayList<String> funcInfo = new ArrayList<String>();
            
            try{
                funcInfo.add(this.numeroFormattedField.getText());
                funcInfo.add(this.nomeTextField.getText());
                funcInfo.add((String)this.nacionalidadeCombo.getSelectedItem());
                funcInfo.add(this.profissaoTextField.getText());
                
                if(this.getControl().updateFuncionario(funcInfo)){
                    JOptionPane.showMessageDialog(new JFrame(), "Funcionário atualizado com sucesso");
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(), "Erro ao atualizar funcionário");
                }
            
                FuncionarioView.state = FuncionarioView.BUSCA;
                this.loadSearchView();
            }catch(java.lang.IndexOutOfBoundsException ex){
                JOptionPane.showMessageDialog(new JFrame(), "Campos Obrigatórios ausentes");
                
            }
            
        }
        if(FuncionarioView.state == FuncionarioView.BUSCA){
            String numero = this.numeroFormattedField.getText();
            if(!numero.equals("")){
                
                ArrayList<String> funcInfo = new ArrayList<String>();
                try {
                    funcInfo = this.getControl().searchFuncionario(numero);
                } 
                catch (notFoundException ex) {
                    Logger.getLogger(FuncionarioView.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(new JFrame(), "Funcionário não encontrado");
                }
                
                try{
                    this.nomeTextField.setText(funcInfo.get(0));
                    this.nacionalidadeCombo.setSelectedItem(funcInfo.get(1));
                    this.profissaoTextField.setText(funcInfo.get(2));
                    this.nacionalidadeCombo.setVisible(true);
                    FuncionarioView.state = FuncionarioView.EDIT;
                    this.loadEditView();
                }catch(java.lang.IndexOutOfBoundsException ex){
                    String stack="";
                    for(StackTraceElement s : ex.getStackTrace()){
                        stack+="\n"+s;
                    }
                    JOptionPane.showMessageDialog(new JFrame(), "Erro interno do sistema" + "\n"+stack);
                }catch(java.lang.NullPointerException ex2){
                    JOptionPane.showMessageDialog(new JFrame(),"Nenhum funcionário encontrado");
                }
            }
        }
        
        if(FuncionarioView.state == FuncionarioView.CADASTRO){
            ArrayList<String> funcInfo = new ArrayList<String>();
            
            try{
                funcInfo.add(this.numeroFormattedField.getText());  //??
                funcInfo.add(this.nomeTextField.getText());
                funcInfo.add((String)this.nacionalidadeCombo.getSelectedItem());
                funcInfo.add(this.profissaoTextField.getText());

                int result  = this.getControl().registerFuncionario(funcInfo);
                if( result != -1){
                    JOptionPane.showMessageDialog(new JFrame(), "Funcionario Registrado com numero "+result);
                    this.loadSearchView();
                }
                else{
                    JOptionPane.showMessageDialog(new JFrame(), "Erro ao registrar funcionário");
                }
            }catch(java.lang.IndexOutOfBoundsException ex){
                JOptionPane.showMessageDialog(new JFrame(), "Campos Obrigatórios ausentes");
            }
        }
    }//GEN-LAST:event_confirmarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmarButton;
    private javax.swing.JComboBox<String> nacionalidadeCombo;
    private javax.swing.JLabel nacionalidadeLabel;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField nomeTextField;
    private javax.swing.JFormattedTextField numeroFormattedField;
    private javax.swing.JLabel numeroLabel;
    private javax.swing.JLabel profissaoLabel;
    private javax.swing.JTextField profissaoTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    public void loadSearchView() {
        
        this.titleLabel.setText("Buscar Funcionário");
        this.confirmarButton.setText("Buscar");
        this.nomeTextField.setText("");
        this.nomeTextField.setEditable(false);
        this.numeroLabel.setVisible(true);
        this.numeroFormattedField.setText("");
        this.numeroFormattedField.setEditable(true);
        this.nacionalidadeCombo.setVisible(false);
        this.profissaoTextField.setText("");
        this.profissaoTextField.setEditable(false);

        FuncionarioView.state = FuncionarioView.BUSCA;
    }
    
    public void loadNewView(){
        this.titleLabel.setText("Cadastrar Funcionário");
        this.confirmarButton.setText("Confirmar");
        this.nomeTextField.setText("");
        this.nomeTextField.setEditable(true);
        this.numeroLabel.setVisible(true);
        this.numeroFormattedField.setText("");
        this.numeroFormattedField.setEditable(false);
        this.nacionalidadeCombo.setVisible(true);
        this.profissaoTextField.setText("");
        this.profissaoTextField.setEditable(true);
        FuncionarioView.state = FuncionarioView.CADASTRO;
            
    }
    
    public FuncionarioControl getControl() {
        return Control;
    }

    public void setControl(FuncionarioControl Control) {
        this.Control = Control;
    }

    private void loadEditView() {
        this.nomeTextField.setEditable(true);
        this.profissaoTextField.setEditable(true);
    }

}
