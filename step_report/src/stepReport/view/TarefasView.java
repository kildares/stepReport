/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stepReport.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import stepReport.control.TarefasControl;



/**
 *
 * @author Kildare
 */
public final class TarefasView extends javax.swing.JPanel {

    /**
     * Creates new form DadosFuncionarioView
     */
    private TarefasControl Control;
   
    private static int state;
    
    private static final int CADASTRO = 1;        
    private static final int BUSCA = 2;
    private static final int EDIT = 3;
    private static final int REMOVE = 4; 
            
    
    public TarefasView(TarefasControl control) {
        initComponents();
        this.setControl(control);
        
        TarefasView.state = TarefasView.BUSCA;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        bspLabel = new javax.swing.JLabel();
        bspTextField = new javax.swing.JTextField();
        taskLabel = new javax.swing.JLabel();
        taskTextField = new javax.swing.JTextField();
        navioLabel = new javax.swing.JLabel();
        navioTextField = new javax.swing.JTextField();
        numeroLabel = new javax.swing.JLabel();
        numeroFormattedField = new javax.swing.JFormattedTextField();
        confirmarButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleLabel.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        titleLabel.setText("Cadastrar Horas");
        add(titleLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 13, -1, -1));

        bspLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        bspLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bspLabel.setText("BSP:");
        add(bspLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 220, -1));

        bspTextField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(bspTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 145, 500, -1));

        taskLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        taskLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        taskLabel.setText("Task Number:");
        add(taskLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 220, -1));

        taskTextField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(taskTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 205, 500, -1));

        navioLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        navioLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        navioLabel.setText("Navio / Unidade:");
        add(navioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 220, -1));

        navioTextField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(navioTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 265, 500, -1));

        numeroLabel.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        numeroLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        numeroLabel.setText("Número do trabalhador:");
        add(numeroLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 220, -1));

        numeroFormattedField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        numeroFormattedField.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        add(numeroFormattedField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 85, 500, -1));

        confirmarButton.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        confirmarButton.setText("CONFIRMAR");
        confirmarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarButtonActionPerformed(evt);
            }
        });
        add(confirmarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, -1, 45));
    }// </editor-fold>//GEN-END:initComponents

    private void confirmarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarButtonActionPerformed
     
        if(TarefasView.state == TarefasView.EDIT){
            String idFunc, bsp,navio,task;
            idFunc = this.numeroFormattedField.getText();
            bsp = this.bspTextField.getText();
            navio = this.navioTextField.getText();
            task = this.taskTextField.getText();
            
            if(idFunc.isEmpty()){
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo BSP não pode ser vazio");
            }
            else if(bsp.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo BSP não pode ser vazio");
            else if(navio.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo Navio não pode ser vazio");
            else if(task.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo Task não pode ser vazio");
            else{
                if(this.getControl().editTarefa(idFunc,bsp,navio,task)){
                    JOptionPane.showMessageDialog(this.getControl().getScreen(), "Atualizacao concluida com sucesso");
                    this.loadSearchView();
                }
                else{
                    JOptionPane.showMessageDialog(this.getControl().getScreen(), "Erro ao atualizar dados de funcionário");
                }
            }
            
        }
        
        if(TarefasView.state == TarefasView.CADASTRO){
            String idFunc, bsp,navio,task;
            idFunc = this.numeroFormattedField.getText();
            bsp = this.bspTextField.getText();
            navio = this.navioTextField.getText();
            task = this.taskTextField.getText();
            
            if(idFunc.isEmpty()){
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo BSP não pode ser vazio");
            }
            else if(bsp.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo BSP não pode ser vazio");
            else if(navio.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo Navio não pode ser vazio");
            else if(task.isEmpty())
                JOptionPane.showMessageDialog(this.getControl().getScreen(), "Campo Task não pode ser vazio");
            else{
                if(this.getControl().editTarefa(idFunc,bsp,navio,task)){    //Usa a mesma funcao de editar uma tarefa
                    JOptionPane.showMessageDialog(this.getControl().getScreen(), "Dados cadastrados com sucesso");
                    this.loadSearchView();
                }
                else{
                    JOptionPane.showMessageDialog(this.getControl().getScreen(), "Erro ao cadastrar dados de funcionário");
                }
            }
            
        }
        
        if(TarefasView.state == TarefasView.BUSCA){
            String numero = this.numeroFormattedField.getText();
            if(!numero.isEmpty()){
                ArrayList<String> tasks = this.getControl().searchTarefas(numero);

                if(tasks!=null){
                    this.numeroFormattedField.setEditable(false);
                    
                    this.bspTextField.setText(tasks.get(1));
                    this.bspTextField.setEditable(true);
                    this.taskTextField.setText(tasks.get(2));
                    this.taskTextField.setEditable(true);
                    this.navioTextField.setText(tasks.get(3));
                    this.navioTextField.setEditable(true);
                    this.confirmarButton.setText("Alterar");
                    TarefasView.state = TarefasView.EDIT;
                }
                else
                    JOptionPane.showMessageDialog(this.getControl().getScreen(), "Usuário ainda não tem tarefas cadastradas");
            }
        }
    }//GEN-LAST:event_confirmarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bspLabel;
    private javax.swing.JTextField bspTextField;
    private javax.swing.JButton confirmarButton;
    private javax.swing.JLabel navioLabel;
    private javax.swing.JTextField navioTextField;
    private javax.swing.JFormattedTextField numeroFormattedField;
    private javax.swing.JLabel numeroLabel;
    private javax.swing.JLabel taskLabel;
    private javax.swing.JTextField taskTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables


    public TarefasControl getControl() {
        return Control;
    }

    public void setControl(TarefasControl Control) {
        this.Control = Control;
    }

    public void loadSearchView() {
        
        this.titleLabel.setText("Buscar Tarefa");
        this.numeroFormattedField.setEditable(true);
        this.numeroFormattedField.setText("");
        this.bspTextField.setText("");
        this.bspTextField.setEditable(false);
        this.taskTextField.setText("");
        this.taskTextField.setEditable(false);
        this.navioTextField.setText("");
        this.navioTextField.setEditable(false);
        this.confirmarButton.setText("BUSCAR");
        
        TarefasView.state = TarefasView.BUSCA;
        
    }

    public void loadNewView() {
        
        this.numeroFormattedField.setText("");
        this.bspTextField.setText("");
        this.bspTextField.setEditable(true);
        this.taskTextField.setText("");
        this.taskTextField.setEditable(true);
        this.navioTextField.setText("");
        this.navioTextField.setEditable(true);
        this.confirmarButton.setText("Registrar");
        TarefasView.state = TarefasView.CADASTRO;
    }


}
